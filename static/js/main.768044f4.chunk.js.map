{"version":3,"sources":["pages/HomePage/HomePage.js","images/logo_students.png","shared/ActiveUserContext.js","pages/LoginPage/LoginPage.js","pages/SignupPgae/SignupPage.js","components/StudentGrades/StudentGrades.js","components/StudenGradesTable/StudentGradesTable.js","model/CourseModel/CourseModel.js","pages/StudentsPage/StudentsPage.js","components/NavBar/NavBar.js","model/UserModel/UserModel.js","pages/SendMsgPage/SendMsgPage.js","model/StudentModel/StudentModel.js","components/UpdateGradeModal/UpdateGradeModal.js","components/TeacherGrades/TeacherGrades.js","components/GradesTable/GradesTable.js","components/SelectStudent/SelectStudent.js","components/TeacherGradesTable/TeacherGradesTable.js","pages/UpdateGrades/UpdateGrades.js","model/MessageModel/MessageModel.js","components/GetMessagesTable/MessagesTable.js","components/GetMessagesTable/GetMessagesTable.js","pages/GetMessagesPage/GetMessagesPage.js","App.js","reportWebVitals.js","index.js"],"names":["HomePage","className","Row","Col","ActiveUserContext","createContext","LoginPage","users","onLogin","useState","email","setEmail","pwd","setPwd","showError","setShowError","activeUser","useContext","role","to","src","logo","width","height","alt","Form","onSubmit","e","preventDefault","user","login","Group","Control","type","placeholder","value","onChange","target","Button","Alert","variant","SignupPage","addUser","id","setId","fname","setFname","lname","setLname","showMsg","setShowMsg","parseInt","StudentGrades","courses","courseGrade","courseName","courseId","StudentGradesTable","console","log","Table","striped","bordered","hover","map","one","CourseModel","plainCourse","this","StudentsPage","coursesList","studentCourses","p","course","courseid","find","c","Container","NavBar","onLogout","messages","Navbar","bg","expand","Brand","href","name","Toggle","aria-controls","Collapse","Nav","Link","onClick","UserModel","plainUser","toLowerCase","SendMsgPage","addMessage","topicsList","selectedTopicIndex","setSelectedTopicIndex","desc","setDesc","options","topic","index","topicId","topicName","as","custom","event","rows","onKeyPress","charCode","trim","onEnterDesc","StudentModel","UpdateGradeModal","show","onClose","onCreate","grade","setGrade","Modal","onHide","size","Header","closeButton","Title","Body","controlId","Label","column","sm","Footer","TeacherGrades","showUpdateGradeModal","setShowUpdateGradeModal","OverlayTrigger","placement","delay","hide","overlay","props","Tooltip","GradesTable","studentsList","selectedUserIndex","addCourses","SelectStudent","setIndex","TeacherGradesTable","students","setSelectedUserIndex","plainuser","student","UpdateGrades","onlystudents","filter","a","MessageModel","plainMsg","userId","isNew","MessagesTable","GetMessagesTable","GetMessagesPage","topic1","topic2","topic3","message","userName","data","labels","datasets","label","backgroundColor","borderColor","borderWidth","App","usersJSON","setUsers","setActiveUser","coursesJSON","messageJSON","setMessages","Provider","exact","path","newUser","concat","newMsg","newCourses","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8vEAuBeA,MAlBf,WACI,OACI,sBAAKC,UAAU,SAAf,UACI,sBAAKA,UAAU,WAAf,UACI,yFACA,gIAEJ,qBAAKA,UAAU,QAAf,SACI,cAACC,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,4B,mCCdL,G,OAAA,IAA0B,2C,gBCI1BC,EAFWC,wBAAc,MCoFxBC,MA3EhB,YAAuC,IAAnBC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,QACvB,EAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAsBF,mBAAS,IAA/B,mBAAOG,EAAP,KAAYC,EAAZ,KACA,EAAiCJ,oBAAS,GAA1C,mBAAOK,EAAP,KAAkBC,EAAlB,KACMC,EAAaC,qBAAWb,GAE9B,OAAIY,GAAkC,YAApBA,EAAWE,KAClB,cAAC,IAAD,CAAUC,GAAG,cACbH,GAAkC,UAApBA,EAAWE,KACzB,cAAC,IAAD,CAAUC,GAAG,kBAqBpB,sBAAKlB,UAAU,UAAf,UACI,sBAAKA,UAAU,WAAf,UACI,qBACImB,IAAKC,EACLC,MAAM,KACNC,OAAO,KACPtB,UAAU,2BACVuB,IAAI,SACR,6IAEJ,qBAAKvB,UAAU,SAAf,SACI,eAACwB,EAAA,EAAD,CAAMC,SA5BlB,SAAgBC,GACZA,EAAEC,iBACF,IAFe,EAEXZ,EAAa,KAFF,cAGIT,GAHJ,IAGf,2BAAyB,CAAC,IAAfsB,EAAc,QACrB,GAAIA,EAAKC,MAAMpB,EAAME,GAAK,CACtBI,EAAaa,EACb,QANO,8BASXb,EACAR,EAAQQ,GAERD,GAAa,IAgBT,UACI,eAACU,EAAA,EAAKM,MAAN,CAAY9B,UAAU,WAAtB,UACI,cAAC,IAAD,IACA,cAACwB,EAAA,EAAKO,QAAN,CACQ/B,UAAU,UACVgC,KAAK,QACLC,YAAY,4EACZC,MAAOzB,EACP0B,SAAW,SAAAT,GAAC,OAAIhB,EAASgB,EAAEU,OAAOF,aAE9C,eAACV,EAAA,EAAKM,MAAN,CAAY9B,UAAU,WAAtB,UACI,cAAC,IAAD,IACA,cAACwB,EAAA,EAAKO,QAAN,CACQ/B,UAAU,UACVgC,KAAK,WACLC,YAAY,iCACZC,MAAOvB,EACPwB,SAAW,SAAAT,GAAC,OAAId,EAAOc,EAAEU,OAAOF,aAE5C,cAACG,EAAA,EAAD,CAAQrC,UAAU,iBAAiBgC,KAAK,SAAxC,4CAIEnB,EAAY,cAACyB,EAAA,EAAD,CAAOC,QAAS,SAAUvC,UAAU,SAApC,oGAId,c,2BC2BLwC,MA/Ff,YAAiD,IAA5BC,EAA2B,EAA3BA,QACjB,GAD4C,EAAlBnC,MAAkB,EAAXC,QACbC,mBAAS,KAA7B,mBAAOkC,EAAP,KAAWC,EAAX,KACA,EAA0BnC,mBAAS,IAAnC,mBAAOoC,EAAP,KAAcC,EAAd,KACA,EAA0BrC,mBAAS,IAAnC,mBAAOsC,EAAP,KAAcC,EAAd,KACA,EAA0BvC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAsBF,mBAAS,IAA/B,mBAAOG,EAAP,KAAYC,EAAZ,KACA,EAA6BJ,oBAAS,GAAtC,mBAAOwC,EAAP,KAAgBC,EAAhB,KAGA,OAFmBjC,qBAAWb,GAe1B,sBAAKH,UAAU,WAAf,UACI,sBAAKA,UAAU,WAAf,UACI,qBACImB,IAAKC,EACLC,MAAM,KACNC,OAAO,KACPtB,UAAU,2BACVuB,IAAI,SACR,4KAEJ,qBAAKvB,UAAU,SAAf,SACI,eAACwB,EAAA,EAAD,CAAMC,SApBlB,SAAgBC,GACZA,EAAEC,iBACFc,EAAQS,SAASR,GAAIjC,EAAOmC,EAAOE,EAAMnC,GAEzCsC,GAAW,IAgBH,UACA,eAACzB,EAAA,EAAKM,MAAN,CAAY9B,UAAU,WAAtB,UACU,cAAC,IAAD,IACF,cAACwB,EAAA,EAAKO,QAAN,CACQ/B,UAAU,UACVgC,KAAK,OACLC,YAAY,0DACZC,MAAOQ,EACPP,SAAW,SAAAT,GAAC,OAAIiB,EAAMjB,EAAEU,OAAOF,aAE3C,eAACV,EAAA,EAAKM,MAAN,CAAY9B,UAAU,WAAtB,UACI,cAAC,IAAD,IACA,cAACwB,EAAA,EAAKO,QAAN,CACQ/B,UAAU,UACVgC,KAAK,OACLC,YAAY,wCACZC,MAAOU,EACPT,SAAW,SAAAT,GAAC,OAAImB,EAASnB,EAAEU,OAAOF,aAE9C,eAACV,EAAA,EAAKM,MAAN,CAAY9B,UAAU,WAAtB,UACI,cAAC,IAAD,IACA,cAACwB,EAAA,EAAKO,QAAN,CACQ/B,UAAU,UACVgC,KAAK,OACLC,YAAY,8CACZC,MAAOY,EACPX,SAAW,SAAAT,GAAC,OAAIqB,EAASrB,EAAEU,OAAOF,aAE9C,eAACV,EAAA,EAAKM,MAAN,CAAY9B,UAAU,WAAtB,UACI,cAAC,IAAD,IACA,cAACwB,EAAA,EAAKO,QAAN,CACQ/B,UAAU,UACVgC,KAAK,QACLC,YAAY,4EACZC,MAAOzB,EACP0B,SAAW,SAAAT,GAAC,OAAIhB,EAASgB,EAAEU,OAAOF,aAE9C,eAACV,EAAA,EAAKM,MAAN,CAAY9B,UAAU,WAAtB,UACI,cAAC,IAAD,IACA,cAACwB,EAAA,EAAKO,QAAN,CACQ/B,UAAU,UACVgC,KAAK,WACLC,YAAY,iCACZC,MAAOvB,EACPwB,SAAW,SAAAT,GAAC,OAAId,EAAOc,EAAEU,OAAOF,aAE5C,cAACG,EAAA,EAAD,CAAQrC,UAAU,iBAAiBgC,KAAK,SAAxC,4CAIEgB,EAAU,cAACV,EAAA,EAAD,CAAOC,QAAS,SAAUvC,UAAU,SAApC,sHAIZ,aA7EL,cAAC,IAAD,CAAUkB,GAAG,O,kBCnBb,SAASiC,EAAT,GAAmC,IAAXC,EAAU,EAAVA,QAEnC,OACI,qCACI,6BAAKA,EAAQC,cACb,6BAAKD,EAAQE,aACb,6BAAKF,EAAQG,c,OCHV,SAASC,EAAT,GAAwC,IAAXJ,EAAU,EAAVA,QAGxC,OAFJK,QAAQC,IAAIN,GAGJ,sBAAKpD,UAAU,aAAf,UACK,2GACA,eAAC2D,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAAC9D,UAAU,iBAAxC,UACG,gCACI,+BACI,0DACA,6EACA,+DAGR,uBAAOA,UAAU,gBAAjB,SACOoD,EAAQW,KAAI,SAAAC,GAAG,OACjB,+BAAI,cAACb,EAAD,CAAeC,QAASY,IAA5B,kB,WCrBAC,EACjB,WAAYC,GAAa,oBACrBC,KAAKZ,SAAWW,EAAYX,SAC5BY,KAAKb,WAAaY,EAAYZ,WAC9Ba,KAAKd,YAAca,EAAYb,aC0BxBe,MAvBf,YAAsC,IAAfC,EAAc,EAAdA,YACjBtD,EAAaC,qBAAWb,GAE1B,IAAKY,EACD,OAAO,cAAC,IAAD,CAAUG,GAAG,MAE3B,IANoC,EAMhCoD,EAAiBvD,EAAWqC,QAAQW,KAAI,SAAAQ,GAAC,OAAI,IAAIN,EAAYM,MAN7B,cAQlBD,GARkB,yBAQ5BE,EAR4B,QASzBC,EAAUD,EAAOjB,SACjBD,EAAae,EAAYK,MAAK,SAAAC,GAAC,OAAIF,IAAaE,EAAEpB,YAAWD,WACjEkB,EAAOlB,WAAaA,GAH5B,2BAAmC,IARE,8BAajC,OACI,8BACA,cAACsB,EAAA,EAAD,UACU,cAAC,EAAD,CAAoBxB,QAASkB,S,kCCqBhCO,MAtCf,YAAuC,IAAtBC,EAAqB,EAArBA,SAEP/D,GAF4B,EAAXgE,SAEJ/D,qBAAWb,IAE9B,OACI,eAAC6E,EAAA,EAAD,CAAQC,GAAG,QAAQC,OAAO,KAA1B,UACA,eAACF,EAAA,EAAOG,MAAR,CAAcC,KAAK,KAAKpF,UAAU,WAAlC,UACI,qBACAmB,IAAKC,EACLC,MAAM,KACNC,OAAO,KACPtB,UAAU,2BACVuB,IAAI,SANR,IAOI,sBAAMvB,UAAU,SAAhB,SAA0Be,EAAaA,EAAWsE,KAAO,UAE7D,cAACL,EAAA,EAAOM,OAAR,CAAeC,gBAAc,qBAC7B,eAACP,EAAA,EAAOQ,SAAR,CAAiB9C,GAAG,mBAApB,UACE,eAAC+C,EAAA,EAAD,CAAKzF,UAAU,UAAf,UACGe,GAAkC,UAApBA,EAAWE,KACtB,cAACwE,EAAA,EAAIC,KAAL,CAAUN,KAAK,gBAAf,iFAAyD,KAC5DrE,GAAkC,YAApBA,EAAWE,KACxB,cAACwE,EAAA,EAAIC,KAAL,CAAUN,KAAK,YAAf,+DAAkD,KACnDrE,GAAkC,UAApBA,EAAWE,KACtB,cAACwE,EAAA,EAAIC,KAAL,CAAUN,KAAK,iBAAf,2EAAyD,KAC3DrE,GAAkC,YAApBA,EAAWE,KACtB,cAACwE,EAAA,EAAIC,KAAL,CAAUN,KAAK,aAAf,kDAAgD,QAEvD,eAACK,EAAA,EAAD,CAAKzF,UAAU,UAAf,UACIe,EAAwD,KAA5C,cAAC0E,EAAA,EAAIC,KAAL,CAAUN,KAAK,UAAf,4CACbrE,GAAkC,UAApBA,EAAWE,KACvB,cAACwE,EAAA,EAAIC,KAAL,CAAUN,KAAK,WAAf,4CAA6C,KAC/CrE,EAAa,cAAC0E,EAAA,EAAIC,KAAL,CAAUN,KAAK,IAAIO,QAAS,kBAAMb,KAAlC,4CAAiE,e,kCCrCtEc,E,WACjB,WAAYC,GAAW,oBACnB1B,KAAKzB,GAAKmD,EAAUnD,GACpByB,KAAKvB,MAAQiD,EAAUjD,MACvBuB,KAAKrB,MAAQ+C,EAAU/C,MACvBqB,KAAK1D,MAAQoF,EAAUpF,MACvB0D,KAAKxD,IAAMkF,EAAUlF,IACrBwD,KAAKlD,KAAO4E,EAAU5E,KACtBkD,KAAKf,QAAUyC,EAAUzC,QACzBe,KAAKkB,KAAOlB,KAAKvB,MAAQ,IAAMuB,KAAKrB,M,yCAIxC,SAAMrC,EAAME,GACR,OAAOF,EAAMqF,gBAAkB3B,KAAK1D,MAAMqF,eACnCnF,IAAQwD,KAAKxD,Q,uBCiEboF,MAxEf,YAAiD,IAA3BC,EAA0B,EAA1BA,WAAaC,EAAa,EAAbA,WAEzBlF,EAAaC,qBAAWb,GAC9B,EAAoDK,mBAAS,GAA7D,mBAAO0F,EAAP,KAA2BC,EAA3B,KACA,EAAwB3F,mBAAS,IAAjC,mBAAO4F,EAAP,KAAaC,EAAb,KACA,EAA6B7F,oBAAS,GAAtC,mBAAOwC,EAAP,KAAgBC,EAAhB,KAoBOqD,EAAUL,EAAWlC,KAAI,SAACwC,EAAOC,GAAR,OACxB,wBAAQtE,MAAOgB,SAASqD,EAAME,SAA9B,SAAyCF,EAAMG,eAGrD,OAAK3F,EAEwB,UAApBA,EAAWE,KACX,cAAC,IAAD,CAAUC,GAAG,MAIpB,eAAC0D,EAAA,EAAD,CAAW5E,UAAU,YAArB,UACI,+BAAI,cAAC,IAAD,IAAJ,yDACA,eAACwB,EAAA,EAAD,CAAMxB,UAAU,iBAAhB,UACI,cAACwB,EAAA,EAAKO,QAAN,CACI4E,GAAG,SACH3G,UAAU,OACV4G,QAAM,EACN1E,MAAOgE,EACP/D,SAvBd,SAAkB0E,GAChB3D,SAASiD,EAAsBU,EAAMzE,OAAOF,SAiBpC,SAMKoE,IAEL,cAAC9E,EAAA,EAAKM,MAAN,UACI,cAACN,EAAA,EAAKO,QAAN,CAAc4E,GAAG,WAAY1E,YAAY,0DACrC6E,KAAM,EACNC,WAAY,SAACrF,GAAD,OAnC9B,SAAqBA,GACA,KAAfA,EAAEsF,UAAmBtF,EAAEU,OAAOF,MAAM+E,QACpCZ,EAAQ3E,EAAEU,OAAOF,OAiCcgF,CAAYxF,IAE/BS,SAAU,SAACT,GAAD,OAAO2E,EAAQ3E,EAAEU,OAAOF,QAClCA,MAAOkE,MAIf,cAAC/D,EAAA,EAAD,CAAQE,QAAQ,kBAAkBP,KAAK,SAC/B2D,QAnDpB,WACQO,GAAsBE,IACtBJ,EAAW9C,SAASgD,GAAoBE,EAAKrF,EAAW2B,IACxD2D,EAAQ,IACRpD,GAAW,KA8CP,gCAKED,EAAU,cAACV,EAAA,EAAD,CAAOC,QAAS,UAAWvC,UAAU,kBAArC,sHAIR,WApCL,cAAC,IAAD,CAAUkB,GAAG,OCtCPiG,EACjB,WAAYtB,GAAW,oBACnB1B,KAAKzB,GAAKmD,EAAUnD,GACpByB,KAAKvB,MAAQiD,EAAUjD,MACvBuB,KAAKrB,MAAQ+C,EAAU/C,MACvBqB,KAAKf,QAAUyC,EAAUzC,QACzBe,KAAKkB,KAAOlB,KAAKvB,MAAQ,IAAMuB,KAAKrB,O,8CC2C7BsE,MA7Cf,YAAwD,IAA5BC,EAA2B,EAA3BA,KAAMC,EAAqB,EAArBA,QAASC,EAAY,EAAZA,SACvC,EAA0B/G,mBAAS,IAAnC,mBAAOgH,EAAP,KAAcC,EAAd,KAcA,OACI,eAACC,EAAA,EAAD,CAAOL,KAAMA,EAAMM,OAAQL,EAASM,KAAK,KAAK5H,UAAU,cAAxD,UACI,cAAC0H,EAAA,EAAMG,OAAP,CAAcC,aAAW,EAAC9H,UAAU,WAApC,SACI,cAAC0H,EAAA,EAAMK,MAAP,yEAEJ,cAACL,EAAA,EAAMM,KAAP,UACI,cAACxG,EAAA,EAAD,UACI,eAACA,EAAA,EAAKM,MAAN,CAAY6E,GAAI1G,IAAKgI,UAAU,qBAA/B,UACI,cAACzG,EAAA,EAAK0G,MAAN,CAAYC,QAAM,EAACC,GAAI,EAAvB,+DAGA,cAAClI,EAAA,EAAD,CAAKkI,GAAI,EAAT,SACI,cAAC5G,EAAA,EAAKO,QAAN,CAAcC,KAAK,OACfE,MAAOsF,EAAOrF,SAAU,SAAAT,GAAC,OAAI+F,EAAS/F,EAAEU,OAAOF,mBAKnE,eAACwF,EAAA,EAAMW,OAAP,CAAcrI,UAAU,iBAAxB,UACI,cAACqC,EAAA,EAAD,CAAQE,QAAQ,kBAAkBoD,QA1B9C,WACI4B,EAASC,GAJTC,EAAS,IAMTH,KAuBQ,sCAGA,cAACjF,EAAA,EAAD,CAAQE,QAAQ,eAAeoD,QAAS2B,EAAxC,mDCpCD,SAASgB,EAAT,GAAiD,IAAxBlF,EAAuB,EAAvBA,QAASiB,EAAc,EAAdA,YAE7C,EAAwD7D,oBAAS,GAAjE,mBAAO+H,EAAP,KAA6BC,EAA7B,KAEQ/D,EAAUrB,EAAQG,SAClBD,EAAae,EAAYK,MAAK,SAAAC,GAAC,OAAIF,IAAaE,EAAEpB,YAAWD,WAYlE,OACC,qCACI,cAACmF,EAAA,EAAD,CACIC,UAAU,MACVC,MAAO,CAAEtB,KAAM,IAAKuB,KAAM,KAC1BC,QAXc,SAACC,GAAD,OAClB,cAACC,EAAA,EAAD,yBAASrG,GAAG,kBAAqBoG,GAAjC,iHAOA,SAII,oBAAInD,QAAS,kBAAM6C,GAAwB,IAA3C,SAAmDpF,EAAQC,gBAE/D,6BAAKC,IACL,6BAAKF,EAAQG,WACb,cAAC,EAAD,CAAkB8D,KAAMkB,EACNjB,QAAS,kBAAMkB,GAAwB,IACvCjB,SAtBtB,SAAmBC,GACfpE,EAAQC,YAAcmE,QCTnB,SAASwB,EAAT,GAA6E,IAAvDC,EAAsD,EAAtDA,aAAcC,EAAwC,EAAxCA,kBAAkB9F,EAAsB,EAAtBA,QAAsB,EAAb+F,WAQ1E,OAJIF,EAAaC,GAAmB9F,UACnB,EAIb,qCACI,gCACI,+BACI,0DACA,6EACA,+DAGR,uBAAOpD,UAAU,gBAAjB,SAGQiJ,EAAaC,GAAmB9F,QAAQW,KAAI,SAAAC,GAAG,OAC3C,6BAAI,cAACsE,EAAD,CAAelF,QAASY,EACRK,YAAajB,cCtB1C,SAASgG,EAAT,GAAgE,IAAxCF,EAAuC,EAAvCA,kBAAmBG,EAAoB,EAApBA,SAAU/C,EAAU,EAAVA,QAChE,OACI,8BACO,sBAAKtG,UAAU,oBAAf,UACC,mFACA,cAACwB,EAAA,EAAKO,QAAN,CACI4E,GAAG,SACH3G,UAAU,eACV4G,QAAM,EACN1E,MAAOgH,EACP/G,SAAUkH,EALd,SAMK/C,S,OCRN,SAASgD,EAAT,GAA+D,IAAlClG,EAAiC,EAAjCA,QAAUmG,EAAuB,EAAvBA,SAAUJ,EAAa,EAAbA,WAEhE,EAAkD3I,mBAAS,GAA3D,mBAAO0I,EAAP,KAA0BM,EAA1B,KAEIP,EAAeM,EAASxF,KAAK,SAAA0F,GAAS,OAAI,IAAItC,EAAasC,MAEzDnD,EAAU2C,EAAalF,KAAI,SAAC2F,EAASlD,GAAV,OAC7B,wBAAQtE,MAAOsE,EAAf,SAAuBkD,EAAQrE,UAO/B,OACI,sBAAKrF,UAAU,aAAf,UACI,cAACoJ,EAAD,CAAeF,kBAAmBA,EAClB5C,QAASA,EACT+C,SAT5B,SAAkBxC,GACd2C,EAAqB3C,EAAMzE,OAAOF,UAS1B,cAACyB,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAAC9D,UAAU,iBAAxC,SACI,cAACgJ,EAAD,CAAaC,aAAcA,EACfC,kBAAmBA,EACnB9F,QAASA,EACT+F,WAAYA,MAE5B,oBAAInJ,UAAU,cAAd,4PC1BG,SAAS2J,EAAT,GAAyD,IAGhEC,EAH8BvF,EAAiC,EAAjCA,YAAc/D,EAAmB,EAAnBA,MAAM6I,EAAa,EAAbA,WAChDpI,EAAaC,qBAAWb,GAM9B,OAHAyJ,EAAetJ,EAAMuJ,QAAO,SAAAC,GAAC,MAAe,YAAXA,EAAE7I,QAG9BF,EAKD,8BACI,cAAC6D,EAAA,EAAD,UACM,cAAC,EAAD,CAAoBxB,QAASiB,EAAakF,SAAUK,EAAcT,WAAYA,QANjF,cAAC,IAAD,CAAUjI,GAAG,M,ICdP6I,GAEhB,WAAYC,GAAU,oBACnB7F,KAAKzB,GAAKsH,EAAStH,GACnByB,KAAKsC,QAAUuD,EAASvD,QACxBtC,KAAKuC,UAAY,GACjBvC,KAAKiC,KAAO4D,EAAS5D,KACrBjC,KAAK8F,OAASD,EAASC,OACvB9F,KAAKkB,KAAO2E,EAAS3E,KACrBlB,KAAK+F,MAAQF,EAASE,OCPf,SAASC,GAAT,GAAoC,IAAZpF,EAAW,EAAXA,SAEnC,OACI,qCACI,6BAAKA,EAASM,OACd,6BAAKN,EAASqB,OACd,6BAAKrB,EAAS2B,e,OCHX,SAAS0D,GAAT,GAAuC,IAAZrF,EAAW,EAAXA,SAGtC,OACI,cAACH,EAAA,EAAD,UACA,sBAAK5E,UAAU,aAAf,UACK,qGACA,eAAC2D,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAAC9D,UAAU,iBAAxC,UACG,gCACI,+BACI,0DACA,+FACA,+DAGR,uBAAOA,UAAU,gBAAjB,SACO+E,EAAShB,KAAI,SAAAC,GAAG,OAClB,qBAAIhE,UAAWgE,EAAIkG,MAAQ,cAAgB,KAA3C,UAAiD,cAACC,GAAD,CAAepF,SAAUf,IAA1E,oB,cChBN,SAASqG,GAAT,GAA0D,IAAhC/J,EAA+B,EAA/BA,MAAOyE,EAAwB,EAAxBA,SAAWkB,EAAa,EAAbA,WAGvD,IAFmBjF,qBAAWb,GAG1B,OAAO,cAAC,IAAD,CAAUe,GAAG,MAGxB,IAPoE,EAOhEoJ,EAAS,EACTC,EAAS,EACTC,EAAS,EATuD,cAWpDzF,GAXoD,yBAW/D0F,EAX+D,QAYhEC,EAAWpK,EAAMoE,MAAK,SAAA9C,GAAI,OAAI6I,EAAQR,SAAWrI,EAAKc,MAAK2C,KAC/DoF,EAAQpF,KAAOqF,EACf,IAAIhE,EAAYT,EAAWvB,MAAK,SAAA6B,GAAK,OAAIkE,EAAQhE,UAAYF,EAAME,WAASC,UAC5E+D,EAAQ/D,UAAYA,EAEG,IAApB+D,EAAQhE,UACL6D,EACyB,IAApBG,EAAQhE,UACb8D,IAEAC,GAXV,2BAA8B,IAX0C,8BA0BxE,IAAMG,EAAO,CACTC,OAAQ,CAAC,iCAAS,0DAAc,4BAChCC,SAAU,CACN,CACAC,MAAO,aACPH,KAAM,CAACL,EAAQC,EAAQC,GACvBO,gBAAiB,CACb,0BAGA,0BAEA,2BAEJC,YAAa,CACT,wBAGA,wBAEA,yBAEJC,YAAa,KAKjB,OACI,gCACI,cAACb,GAAD,CAAkBrF,SAAUA,IAC5B,qBAAK/E,UAAU,MAAf,SACI,cAAC,KAAD,CAAK2K,KAAMA,SC+DZO,OAzGf,WACI,MAA0B1K,mBAAS2K,EAAUpH,KAAK,SAAA0F,GAAS,OAAI,IAAI7D,EAAU6D,OAA7E,mBAAOnJ,EAAP,KAAc8K,EAAd,KACA,EAAoC5K,mBAASF,EAAM,IAAnD,mBAAOS,EAAP,KAAmBsK,EAAnB,KACA,EAAsC7K,mBAAS8K,EAAYvH,KAAM,SAAAS,GAAM,OAAI,IAAIP,EAAYO,OAA3F,mBAAOH,EAAP,KAEM4B,GAFN,KAEmB,CAAC,CAAC,QAAW,EAAE,UAAY,kCAC1B,CAAC,QAAW,EAAE,UAAY,2DAC1B,CAAC,QAAW,EAAE,UAAY,8BAE9C,EAA+BzF,mBAAS+K,EAAYxH,KAAK,SAAAiG,GAAQ,OAAI,IAAID,GAAaC,OAAtF,mBAAOjF,EAAP,KAAgByG,EAAhB,KA2DF,OACE,cAAC,EAAkBC,SAAnB,CAA4BvJ,MAAOnB,EAAnC,SACA,cAAC,IAAD,UACI,eAAC,IAAD,WACI,eAAC,IAAD,CAAO2K,OAAK,EAACC,KAAK,IAAlB,UACI,cAAC,EAAD,CAAQ7G,SAAU,kBAAMuG,EAAc,SACtC,cAAC,EAAD,OAEJ,cAAC,IAAD,CAAOK,OAAK,EAACC,KAAK,SAAlB,SAA2B,cAAC,EAAD,CAAWrL,MAAOA,EAAOC,QAAS,SAAAqB,GAAI,OAAGyJ,EAAczJ,QAClF,eAAC,IAAD,CAAO8J,OAAK,EAACC,KAAK,UAAlB,UACI,cAAC,EAAD,CAAQ7G,SAAU,kBAAMuG,EAAc,SACtC,cAAC,EAAD,CAAY5I,QAvDxB,SAAiBC,EAAGjC,EAAOmC,EAAOE,EAAMnC,GACpC,IAAMiL,EAAU,IAAIhG,EAAU,CAC1BlD,KACAE,QACAE,QACArC,QACAE,MACAM,KAAK,UACLmC,QAAQ,CAAC,CACL,SAAY,EACZ,YAAgB,OAGxBgI,EAAS9K,EAAMuL,OAAOD,KA0CgBtL,MAAOA,EAAOC,QAAS,SAAAqB,GAAI,OAAGyJ,EAAczJ,SAE9E,eAAC,IAAD,CAAO8J,OAAK,EAACC,KAAK,YAAlB,UACI,cAAC,EAAD,CAAQ7G,SAAU,kBAAMuG,EAAc,SACtC,cAAC,EAAD,CAAchH,YAAaA,OAE/B,eAAC,IAAD,CAAOqH,OAAK,EAACC,KAAK,WAAlB,UACI,cAAC,EAAD,CAAQ7G,SAAU,kBAAMuG,EAAc,SACtC,cAAC,EAAD,CAAatG,SAAUA,EAAUzE,MAAOA,EAChC0F,WA7EpB,SAAoBS,EAASL,GACzB,IAAM0F,EAAS,IAAI/B,GAAa,CAE9BtD,UACAL,OACA6D,OAAQlJ,EAAW2B,GACnBwH,OAAQ,IAGVsB,EAAYzG,EAAS8G,OAAOC,IAC5BrI,QAAQC,IAAIoI,IAmE4B7F,WAAYA,OAEhD,eAAC,IAAD,CAAOyF,OAAK,EAACC,KAAK,gBAAlB,UACI,cAAC,EAAD,CAAQ7G,SAAU,kBAAMuG,EAAc,SACtC,cAAC1B,EAAD,CAActF,YAAaA,EAAa/D,MAAOA,EAAO6I,WApDlE,SAAoB/F,EAAQ8F,GACxB,IAAM6C,EAAa,IAAI9H,EAAY,CAQ/BV,SAASH,EAAQG,SACjBD,WAAWF,EAAQE,WACnBD,YAAYD,EAAQC,cAGxBI,QAAQC,IAAIpD,GAKZ,IAAIkG,EAAQtD,SAASgG,GAClB5I,EAAMkG,EAAM,GAAGpD,QACd9C,EAAMkG,EAAM,GAAGpD,QAAQyI,OAAOE,GAE9BzL,EAAMkG,EAAM,GAAGpD,QAAU2I,EAE7BtI,QAAQC,IAAIpD,SA6BR,eAAC,IAAD,CAAOoL,OAAK,EAACC,KAAK,eAAlB,UACI,cAAC,EAAD,CAAQ7G,SAAU,kBAAMuG,EAAc,OAAOtG,SAAUA,IACvD,cAACsF,GAAD,CAAiB/J,MAAOA,EAAOyE,SAAUA,EAAUkB,WAAYA,eCzGhE+F,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SAM1Bb,O","file":"static/js/main.768044f4.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Col, Row } from 'react-bootstrap'\r\nimport './HomePage.css';\r\n\r\n\r\nfunction HomePage() {\r\n    return (\r\n        <div className=\"p-home\">\r\n            <div className=\"p-header\">\r\n                <h1>מערכת משוב</h1>\r\n                <h4>למורים ולתלמידים</h4>\r\n            </div>    \r\n            <div className=\"p-img\">\r\n                <Row>\r\n                    <Col>\r\n                        Enter\r\n                    </Col>\r\n                </Row>\r\n            </div>        \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomePage\r\n","export default __webpack_public_path__ + \"static/media/logo_students.18949146.png\";","import { createContext } from \"react\";\r\n\r\nconst ActiveUserContext = createContext(null);\r\n\r\nexport default ActiveUserContext;\r\n","import React, { useContext, useState } from 'react'\r\nimport { Form , Button, Alert } from 'react-bootstrap'\r\nimport './LoginPage.css';\r\nimport logo from '../../images/logo_students.png'; \r\nimport {  MdPerson } from 'react-icons/md';\r\nimport { FaLock } from 'react-icons/fa';\r\nimport { Redirect } from 'react-router';\r\nimport ActiveUserContext from '../../shared/ActiveUserContext';\r\n\r\n\r\n\r\nfunction LoginPage({users ,onLogin }) {\r\n    const [email ,setEmail] = useState(\"\");\r\n    const [pwd ,setPwd] = useState(\"\");\r\n    const [showError, setShowError]= useState(false);\r\n    const activeUser = useContext(ActiveUserContext);\r\n\r\n    if (activeUser && activeUser.role === \"student\") {\r\n        return <Redirect to=\"/students\"/>\r\n    } else if (activeUser && activeUser.role === \"admin\"){\r\n        return <Redirect to=\"/updateGrades\"/>\r\n    }\r\n\r\n    \r\n    function  login(e) {\r\n        e.preventDefault();\r\n        let activeUser = null;\r\n        for (const user of users){\r\n            if (user.login(email,pwd)){\r\n                activeUser = user;\r\n                break;\r\n            }\r\n        }      \r\n        if (activeUser) {\r\n            onLogin(activeUser);\r\n        } else {\r\n            setShowError(true);\r\n        }\r\n    }   \r\n\r\n    return (\r\n        <div className=\"p-login\">\r\n            <div className=\"p-header\">\r\n                <img\r\n                    src={logo}\r\n                    width=\"30\"\r\n                    height=\"30\"\r\n                    className=\"d-inline-block align-top\"\r\n                    alt=\"Home\"/>\r\n                <h2>משוב תלמידים ומורים</h2>\r\n            </div>\r\n            <div className=\"p-form\">           \r\n                <Form onSubmit={login}>\r\n                    <Form.Group className=\"p-form-1\">\r\n                        <MdPerson/>                    \r\n                        <Form.Control \r\n                                className=\"p-input\"\r\n                                type=\"email\" \r\n                                placeholder=\"דואר אלקטרוני\" \r\n                                value={email}\r\n                                onChange={ e => setEmail(e.target.value)}/>                 \r\n                    </Form.Group>\r\n                    <Form.Group className=\"p-form-1\">\r\n                        <FaLock/>                    \r\n                        <Form.Control\r\n                                className=\"p-input\" \r\n                                type=\"password\" \r\n                                placeholder=\"סיסמא\"\r\n                                value={pwd}\r\n                                onChange={ e => setPwd(e.target.value)} />\r\n                    </Form.Group>               \r\n                    <Button className=\"p-login-button\" type=\"submit\">\r\n                        כניסה\r\n                    </Button>\r\n                    \r\n                    { showError ? <Alert variant={\"danger\"} className=\"center\">\r\n                            יש שגיאה בנתונים\r\n                    </Alert>\r\n                    : \r\n                    null}\r\n                </Form>\r\n            </div>            \r\n        </div>\r\n     )\r\n   }\r\n\r\n export default LoginPage\r\n","import React, { useContext, useState } from 'react'\r\nimport { Form , Button, Alert } from 'react-bootstrap'\r\nimport './SignupPage.css';\r\nimport logo from '../../images/logo_students.png'; \r\nimport {  MdPerson } from 'react-icons/md';\r\nimport { FaLock } from 'react-icons/fa';\r\nimport { IoIosMail } from \"react-icons/io\";\r\nimport {AiOutlineNumber} from \"react-icons/ai\";\r\nimport ActiveUserContext from '../../shared/ActiveUserContext';\r\nimport { Redirect } from 'react-router';\r\n\r\nfunction SignupPage({addUser ,users ,onLogin }) {\r\n    const [id ,setId] = useState(\"\");\r\n    const [fname ,setFname] = useState(\"\");\r\n    const [lname ,setLname] = useState(\"\");\r\n    const [email ,setEmail] = useState(\"\");\r\n    const [pwd ,setPwd] = useState(\"\");\r\n    const [showMsg, setShowMsg]= useState(false);\r\n    const activeUser = useContext(ActiveUserContext);\r\n    \r\n    if (!activeUser) {\r\n        return <Redirect to=\"/\"/>\r\n    }\r\n\r\n    function signUp(e){\r\n        e.preventDefault();           \r\n        addUser(parseInt(id),email, fname, lname,pwd);            \r\n        // setDesc(\"\");\r\n        setShowMsg(true);\r\n        // return <Redirect to=\"/\"/>     \r\n    }\r\n    \r\n    return (\r\n        <div className=\"p-signup\">\r\n            <div className=\"p-header\">\r\n                <img\r\n                    src={logo}\r\n                    width=\"30\"\r\n                    height=\"30\"\r\n                    className=\"d-inline-block align-top\"\r\n                    alt=\"Home\"/>\r\n                <h2>משוב תלמידים ומורים הרשמה</h2>\r\n            </div>\r\n            <div className=\"p-form\">           \r\n                <Form onSubmit={signUp}>\r\n                <Form.Group className=\"p-form-1\">\r\n                          <AiOutlineNumber/>                 \r\n                        <Form.Control \r\n                                className=\"p-input\"\r\n                                type=\"text\" \r\n                                placeholder=\"מספר זיהוי\" \r\n                                value={id}\r\n                                onChange={ e => setId(e.target.value)}/>                 \r\n                    </Form.Group>\r\n                    <Form.Group className=\"p-form-1\">\r\n                        <MdPerson/>                    \r\n                        <Form.Control \r\n                                className=\"p-input\"\r\n                                type=\"text\" \r\n                                placeholder=\"שם פרטי\" \r\n                                value={fname}\r\n                                onChange={ e => setFname(e.target.value)}/>                 \r\n                    </Form.Group>\r\n                    <Form.Group className=\"p-form-1\">\r\n                        <MdPerson/>                    \r\n                        <Form.Control \r\n                                className=\"p-input\"\r\n                                type=\"text\" \r\n                                placeholder=\"שם משפחה\" \r\n                                value={lname}\r\n                                onChange={ e => setLname(e.target.value)}/>                 \r\n                    </Form.Group>\r\n                    <Form.Group className=\"p-form-1\">\r\n                        <IoIosMail/>                    \r\n                        <Form.Control \r\n                                className=\"p-input\"\r\n                                type=\"email\" \r\n                                placeholder=\"דואר אלקטרוני\" \r\n                                value={email}\r\n                                onChange={ e => setEmail(e.target.value)}/>                 \r\n                    </Form.Group>\r\n                    <Form.Group className=\"p-form-1\">\r\n                        <FaLock/>                    \r\n                        <Form.Control\r\n                                className=\"p-input\" \r\n                                type=\"password\" \r\n                                placeholder=\"סיסמא\"\r\n                                value={pwd}\r\n                                onChange={ e => setPwd(e.target.value)} />\r\n                    </Form.Group>               \r\n                    <Button className=\"p-login-button\" type=\"submit\">\r\n                        כניסה\r\n                    </Button>\r\n                    \r\n                    { showMsg ? <Alert variant={\"danger\"} className=\"center\">\r\n                           ההרשמה בוצעה בהצלחה\r\n                    </Alert>\r\n                    : \r\n                    null}\r\n                </Form>\r\n            </div>            \r\n        </div>\r\n     )\r\n   }\r\n\r\n\r\nexport default SignupPage\r\n","import React from 'react'\r\n\r\nexport default function StudentGrades({courses}) {\r\n   \r\n    return (\r\n        <> \r\n            <td>{courses.courseGrade}</td>\r\n            <td>{courses.courseName}</td>\r\n            <td>{courses.courseId}</td>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Table } from 'react-bootstrap'\r\nimport StudentGrades from '../StudentGrades/StudentGrades'\r\nimport './StudentGradesTable.css'\r\n\r\nexport default function StudentGradesTable({courses}) {\r\nconsole.log(courses);\r\n\r\n    return (\r\n        <div className=\"p-students\">\r\n             <h4>רשימת הציונים</h4> \r\n             <Table striped bordered hover className=\"students-table\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>ציון</th> \r\n                        <th>שם הקורס</th>                    \r\n                        <th>קורס</th>                                  \r\n                    </tr>\r\n                </thead>\r\n                <tbody className=\"students-body\">\r\n                     { courses.map(one => \r\n                     <tr><StudentGrades courses={one}/> </tr>)\r\n                     }                   \r\n                </tbody>\r\n                </Table>\r\n        </div>\r\n    )\r\n}\r\n","export default class CourseModel {\r\n    constructor(plainCourse){\r\n        this.courseId = plainCourse.courseId;\r\n        this.courseName = plainCourse.courseName;\r\n        this.courseGrade = plainCourse.courseGrade;       \r\n    }\r\n\r\n  \r\n}","import React, { useContext } from 'react'\r\nimport {  Container } from 'react-bootstrap'\r\nimport { Redirect } from 'react-router'\r\nimport StudentGradesTable from '../../components/StudenGradesTable/StudentGradesTable'\r\nimport ActiveUserContext from '../../shared/ActiveUserContext'\r\nimport CourseModel from '../../model/CourseModel/CourseModel'\r\n\r\nfunction StudentsPage({coursesList}) {\r\nconst activeUser = useContext(ActiveUserContext)\r\n\r\n    if (!activeUser) {\r\n        return <Redirect to=\"/\"/>\r\n    }\r\n let studentCourses = activeUser.courses.map(p => new CourseModel(p));\r\n\r\nfor (let course of studentCourses){\r\n        let courseid= course.courseId;   \r\n        let courseName = coursesList.find(c => courseid === c.courseId ).courseName;\r\n        course.courseName = courseName;\r\n    }\r\n    return (\r\n        <div>           \r\n        <Container>                       \r\n                 {<StudentGradesTable courses={studentCourses}/>}          \r\n            </Container>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StudentsPage\r\n","import React, { useContext } from 'react';\r\nimport { Nav, Navbar,Link } from 'react-bootstrap'\r\nimport logo from '../../images/logo_students.png'; \r\nimport ActiveUserContext from '../../shared/ActiveUserContext';\r\nimport './NavBar.css'\r\n\r\nfunction NavBar({onLogout ,messages}) {\r\n\r\n    const activeUser = useContext(ActiveUserContext);\r\n\r\n    return (\r\n        <Navbar bg=\"light\" expand=\"lg\">\r\n        <Navbar.Brand href=\"#/\" className=\"p-navbar\">\r\n            <img\r\n            src={logo}\r\n            width=\"30\"\r\n            height=\"30\"\r\n            className=\"d-inline-block align-top\"\r\n            alt=\"Home\"\r\n         /> <span className=\"p-span\">{activeUser ? activeUser.name : null}</span>\r\n        </Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n          <Nav className=\"mr-auto\">\r\n            {activeUser && activeUser.role === \"admin\"  ? \r\n                <Nav.Link href=\"#/getMessages\">רשימת הודעות</Nav.Link> : null}\r\n            {activeUser && activeUser.role === \"student\" ?\r\n              <Nav.Link href=\"#/sendMsg\">שלח הודעה</Nav.Link> : null}\r\n            {activeUser && activeUser.role === \"admin\" ? \r\n                <Nav.Link href=\"#/updateGrades\">עדכן ציונים</Nav.Link> : null}\r\n             {activeUser && activeUser.role === \"student\" ? \r\n                 <Nav.Link href=\"#/students\">ציונים</Nav.Link> : null }\r\n          </Nav>\r\n          <Nav className=\"ml-auto\">\r\n            {!activeUser ?<Nav.Link href=\"#/login\">כניסה</Nav.Link> : null}\r\n            {activeUser && activeUser.role === \"admin\" ? \r\n               <Nav.Link href=\"#/signup\">הרשמה</Nav.Link> : null}\r\n            {activeUser ? <Nav.Link href=\"#\" onClick={() => onLogout()}>יציאה</Nav.Link> : null}\r\n          </Nav>        \r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n    )\r\n}\r\n\r\nexport default NavBar\r\n","export default class UserModel {\r\n    constructor(plainUser){\r\n        this.id = plainUser.id;\r\n        this.fname = plainUser.fname;\r\n        this.lname = plainUser.lname;\r\n        this.email = plainUser.email;\r\n        this.pwd = plainUser.pwd;\r\n        this.role = plainUser.role;\r\n        this.courses = plainUser.courses;\r\n        this.name = this.fname + \" \" + this.lname\r\n        // console.log(this.courses);\r\n    }\r\n\r\n    login(email,pwd){\r\n        return email.toLowerCase() === this.email.toLowerCase() \r\n            && pwd === this.pwd ;\r\n    }\r\n\r\n    \r\n}","import React, { useContext, useEffect, useState } from 'react'\r\nimport { Alert, Button, Container, Form } from 'react-bootstrap'\r\nimport { Redirect } from 'react-router';\r\nimport ActiveUserContext from '../../shared/ActiveUserContext';\r\nimport './SendMsgPage.css'\r\nimport {FcInspection}  from \"react-icons/fc\";\r\n\r\n\r\nfunction SendMsgPage({addMessage , topicsList}) {\r\n\r\n    const activeUser = useContext(ActiveUserContext);\r\n    const [selectedTopicIndex, setSelectedTopicIndex] = useState(1);    \r\n    const [desc, setDesc] = useState(\"\");\r\n    const [showMsg, setShowMsg]= useState(false);\r\n\r\n    function  addNewMessage() {\r\n        if( selectedTopicIndex && desc ) {\r\n            addMessage(parseInt(selectedTopicIndex),desc,activeUser.id);            \r\n            setDesc(\"\");\r\n            setShowMsg(true);\r\n        } \r\n    }\r\n\r\n      function onEnterDesc(e) {\r\n        if (e.charCode === 13 && e.target.value.trim()) {\r\n            setDesc(e.target.value)\r\n        }\r\n      }\r\n\r\n      function setIndex(event){\r\n        parseInt(setSelectedTopicIndex(event.target.value));\r\n    }    \r\n    \r\n    const  options = topicsList.map((topic, index) =>    \r\n            <option value={parseInt(topic.topicId)}>{topic.topicName}</option>);    \r\n    \r\n    \r\n      if (!activeUser) {\r\n        return <Redirect to=\"/\"/>\r\n    } else if (activeUser.role === \"admin\") {\r\n        return <Redirect to=\"/\"/>\r\n    }\r\n\r\n    return (\r\n        <Container className=\"p-sendMsg\">\r\n            <h4><FcInspection/> שלח הודעה </h4>\r\n            <Form className=\"p-sendMsg-form\">              \r\n                <Form.Control\r\n                    as=\"select\"\r\n                    className=\"my-1\"\r\n                    custom\r\n                    value={selectedTopicIndex} \r\n                    onChange={setIndex}>                   \r\n                    {options}\r\n                </Form.Control>\r\n                <Form.Group >                   \r\n                    <Form.Control as=\"textarea\"  placeholder=\"כתוב הודעה\" \r\n                        rows={3} \r\n                        onKeyPress={(e) => onEnterDesc(e)}\r\n                        // onKeyPress={event => (event.charCode >= 128 && event.charCode <= 154 ) || (event.charCode >= 97 && event.charCode <= 122)}\r\n                        onChange={(e) => setDesc(e.target.value)}\r\n                        value={desc} \r\n                       />\r\n                </Form.Group>\r\n\r\n                <Button variant=\"outline-success\" type=\"submit\"\r\n                        onClick={addNewMessage}>\r\n                    שלח\r\n                </Button>\r\n\r\n                { showMsg ? <Alert variant={\"success\"} className=\"p-sendMsg-alert\">\r\n                             ההודעה נשלחה בהצלחה\r\n                    </Alert>\r\n                    : \r\n                    null}\r\n            </Form>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default SendMsgPage;","export default class StudentModel {\r\n    constructor(plainUser){\r\n        this.id = plainUser.id;\r\n        this.fname = plainUser.fname;\r\n        this.lname = plainUser.lname;      \r\n        this.courses = plainUser.courses;\r\n        this.name = this.fname + \" \" + this.lname;\r\n    }\r\n\r\n  \r\n\r\n    \r\n}","import React, { useState } from 'react';\nimport { Button, Modal, Form, Col, Row, Image } from 'react-bootstrap';\nimport './UpdateGradeModal.css'\n\nfunction UpdateGradeModal({ show, onClose, onCreate }) {\n    const [grade, setGrade] = useState(\"\");\n  \n\n    function clearForm() {\n        setGrade(\"\");\n    }\n\n    function updaeGrade() {\n        onCreate(grade);\n        clearForm();\n        onClose();\n    }\n  \n\n    return (\n        <Modal show={show} onHide={onClose} size=\"lg\" className=\"c-new-grade\">\n            <Modal.Header closeButton className=\"c-header\">\n                <Modal.Title> עדכון ציון</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <Form>\n                    <Form.Group as={Row} controlId=\"formHorizontalName\">\n                        <Form.Label column sm={3}>\n                           עדכן ציון\n                        </Form.Label>\n                        <Col sm={9}>\n                            <Form.Control type=\"text\"  \n                                value={grade} onChange={e => setGrade(e.target.value)}/>\n                        </Col>\n                    </Form.Group>                 \n                </Form>\n            </Modal.Body>\n            <Modal.Footer className=\"c-modal-footer\">                \n                <Button variant=\"outline-success\" onClick={updaeGrade}>\n                    עדכן\n                </Button>\n                <Button variant=\"outline-dark\" onClick={onClose}>\n                   ביטול\n                </Button>\n            </Modal.Footer>\n        </Modal>\n    );\n}\n\nexport default UpdateGradeModal;","import React, { useState } from 'react'\r\nimport { OverlayTrigger, Tooltip } from 'react-bootstrap';\r\nimport UpdateGradeModal from '../../components/UpdateGradeModal/UpdateGradeModal'\r\n\r\n\r\nexport default function TeacherGrades({ courses ,coursesList}) {\r\n  \r\n    const [showUpdateGradeModal, setShowUpdateGradeModal] = useState(false);\r\n\r\n        let courseid= courses.courseId;        \r\n        let courseName = coursesList.find(c => courseid === c.courseId ).courseName;       \r\n  \r\n        function onCreate (grade) {\r\n            courses.courseGrade = grade;\r\n        }\r\n\r\n        const renderTooltip = (props) => (\r\n            <Tooltip id=\"button-tooltip\" {...props}>\r\n              לחץ כדי לעדכן ציון\r\n            </Tooltip>\r\n          );\r\n\r\n       return (\r\n        <>   \r\n            <OverlayTrigger  \r\n                placement=\"top\"\r\n                delay={{ show: 250, hide: 400 }}\r\n                overlay={renderTooltip}>       \r\n                <td onClick={() => setShowUpdateGradeModal(true)}>{courses.courseGrade}</td>\r\n            </OverlayTrigger>\r\n            <td>{courseName}</td>\r\n            <td>{courses.courseId}</td>\r\n            <UpdateGradeModal show={showUpdateGradeModal} \r\n                              onClose={() => setShowUpdateGradeModal(false)} \r\n                              onCreate={onCreate}/>\r\n    </>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport ChooseCourses from '../ChooseCourses/ChooseCourses';\r\nimport TeacherGrades from '../TeacherGrades/TeacherGrades'\r\n\r\nexport default function GradesTable({studentsList, selectedUserIndex,courses ,addCourses}) {\r\n  \r\n    // const [newStudent,setNewstudent] = useState(false);\r\n    let newStudent = false;\r\n    if(!studentsList[selectedUserIndex].courses) {\r\n        newStudent = true;\r\n    }\r\n  \r\n    return (\r\n        <>\r\n            <thead>\r\n                <tr>                       \r\n                    <th>ציון</th> \r\n                    <th>שם הקורס</th>                    \r\n                    <th>קורס</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody className=\"students-body\">\r\n                {/* { !newStudent ? */}\r\n                {\r\n                    studentsList[selectedUserIndex].courses.map(one => \r\n                        <tr><TeacherGrades courses={one} \r\n                                            coursesList={courses}/>\r\n                        </tr>)\r\n                    // :\r\n                    // null\r\n                //    <tr> <ChooseCourses studentsList={studentsList} \r\n                //                        selectedUserIndex={selectedUserIndex} \r\n                //                        coursesList={courses}\r\n                //                        newStudent={newStudent}\r\n                //                        addCourses={addCourses}/>   \r\n                //    </tr>\r\n                }     \r\n            </tbody>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Form } from 'react-bootstrap'\r\n\r\n                           \r\nexport default function SelectStudent({selectedUserIndex, setIndex, options}) {\r\n    return (\r\n        <div>\r\n               <div className=\"p-students-header\">\r\n                <h4>בחר תלמיד</h4>               \r\n                <Form.Control\r\n                    as=\"select\"\r\n                    className=\"my-1 mr-sm-2\"\r\n                    custom\r\n                    value={selectedUserIndex} \r\n                    onChange={setIndex}>                   \r\n                    {options}\r\n                </Form.Control>\r\n            </div>          \r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { Form, Table } from 'react-bootstrap'\r\nimport StudentModel from '../../model/StudentModel/StudentModel';\r\nimport GradesTable from '../GradesTable/GradesTable';\r\nimport SelectStudent from '../SelectStudent/SelectStudent';\r\nimport './TeacherGradesTable.css'\r\n\r\nexport default function TeacherGradesTable({courses , students ,addCourses}) {\r\n\r\nconst [selectedUserIndex, setSelectedUserIndex] = useState(0);\r\n\r\nlet studentsList = students.map( plainuser => new StudentModel(plainuser));\r\n\r\nconst options = studentsList.map((student, index) =>    \r\n    <option value={index}>{student.name}</option>);\r\n\r\nfunction setIndex(event){\r\n    setSelectedUserIndex(event.target.value);\r\n}    \r\n\r\n\r\n    return (\r\n        <div className=\"p-students\">\r\n            <SelectStudent selectedUserIndex={selectedUserIndex}\r\n                            options={options}\r\n                            setIndex={setIndex}/>           \r\n            <Table striped bordered hover className=\"students-table\">\r\n                <GradesTable studentsList={studentsList}\r\n                            selectedUserIndex={selectedUserIndex}\r\n                            courses={courses}\r\n                            addCourses={addCourses}/>              \r\n            </Table>\r\n            <h6 className=\"p-alert-msg\"> * שים לב על מנת לעדכן את הציון לחץ על עמודת הציון</h6>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useContext } from 'react'\r\nimport { Container } from 'react-bootstrap'\r\nimport { Redirect } from 'react-router'\r\nimport TeacherGradesTable from '../../components/TeacherGradesTable/TeacherGradesTable'\r\nimport ActiveUserContext from '../../shared/ActiveUserContext'\r\n\r\nexport default function UpdateGrades({coursesList , users,addCourses}) {\r\n    const activeUser = useContext(ActiveUserContext);\r\n   \r\n    let onlystudents = [];\r\n    onlystudents = users.filter(a => a.role === \"student\");\r\n\r\n\r\n    if (!activeUser) {\r\n        return <Redirect to=\"/\"/>\r\n    }\r\n\r\n    return (\r\n        <div>                \r\n            <Container>                       \r\n                 {<TeacherGradesTable courses={coursesList} students={onlystudents} addCourses={addCourses}/>}          \r\n            </Container>\r\n\r\n        </div>\r\n    )\r\n}\r\n","export default class MessageModel {\r\n   \r\n;    constructor(plainMsg){        \r\n        this.id = plainMsg.id;\r\n        this.topicId = plainMsg.topicId;\r\n        this.topicName = \"\";\r\n        this.desc = plainMsg.desc;\r\n        this.userId = plainMsg.userId;\r\n        this.name = plainMsg.name;\r\n        this.isNew = plainMsg.isNew;\r\n    }    \r\n}\r\n   ","import React from 'react'\r\n\r\nexport default function MessagesTable({messages}) {\r\n   \r\n    return (\r\n        <> \r\n            <td>{messages.name}</td>\r\n            <td>{messages.desc}</td>\r\n            <td>{messages.topicName}</td>\r\n        </>\r\n    )\r\n}\r\n  ","import React from 'react'\r\nimport { Container, TabContainer, Table } from 'react-bootstrap'\r\nimport MessagesTable from './MessagesTable'\r\nimport './GetMessages.css'\r\n\r\nexport default function GetMessagesTable({messages}) {\r\n\r\n\r\n    return (\r\n        <Container>\r\n        <div className=\"c-messages\">\r\n             <h4>רשימת הודעות</h4>  \r\n             <Table striped bordered hover className=\"students-table\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>מגיש</th>\r\n                        <th>תיאור הבקשה</th>                        \r\n                        <th>נושא</th>                                  \r\n                    </tr>\r\n                </thead>\r\n                <tbody className=\"messages-body\">\r\n                     { messages.map(one => \r\n                     <tr className={one.isNew ? \"red-message\" : null}><MessagesTable messages={one}/> </tr>)\r\n                     }                   \r\n                </tbody>\r\n                </Table>\r\n        </div>\r\n        </Container>\r\n    )\r\n}\r\n","import React, { useContext } from 'react'\r\nimport { Redirect } from 'react-router'\r\nimport GetMessagesTable from '../../components/GetMessagesTable/GetMessagesTable'\r\nimport ActiveUserContext from '../../shared/ActiveUserContext'\r\nimport { Pie } from 'react-chartjs-2';\r\n\r\nexport default function GetMessagesPage({users ,messages , topicsList}) {\r\n    const activeUser = useContext(ActiveUserContext)\r\n\r\n    if (!activeUser) {\r\n        return <Redirect to=\"/\"/>\r\n    }\r\n \r\n    let topic1 = 0 ;\r\n    let topic2 = 0;\r\n    let topic3 = 0;\r\n\r\nfor (let message of messages){ \r\n    let userName = users.find(user => message.userId === user.id ).name;\r\n    message.name = userName;    \r\n    let topicName = topicsList.find(topic => message.topicId === topic.topicId).topicName;\r\n    message.topicName = topicName;\r\n\r\n    if(message.topicId === 1){\r\n        ++topic1;\r\n    } else if (message.topicId === 2){\r\n        ++topic2;\r\n    } else {\r\n        ++topic3;\r\n    }\r\n}\r\n\r\nconst data = {\r\n    labels: ['ערעור', 'שאלה למורה', 'בקשה'],\r\n    datasets: [\r\n        {\r\n        label: '# of Votes',\r\n        data: [topic1, topic2, topic3],\r\n        backgroundColor: [\r\n            'rgba(255, 99, 132, 0.2)',\r\n            // 'rgba(54, 162, 235, 0.2)',\r\n            // 'rgba(255, 206, 86, 0.2)',\r\n            'rgba(75, 192, 192, 0.2)',\r\n            // 'rgba(153, 102, 255, 0.2)',\r\n            'rgba(255, 159, 64, 0.2)',\r\n        ],\r\n        borderColor: [\r\n            'rgba(255, 99, 132, 1)',\r\n            // 'rgba(54, 162, 235, 1)',\r\n            // 'rgba(255, 206, 86, 1)',\r\n            'rgba(75, 192, 192, 1)',\r\n            // 'rgba(153, 102, 255, 1)',\r\n            'rgba(255, 159, 64, 1)',\r\n        ],\r\n        borderWidth: 1,\r\n        },\r\n    ],\r\n};\r\n\r\n    return (\r\n        <div>\r\n            <GetMessagesTable messages={messages}/>\r\n            <div className=\"pie\">\r\n                <Pie data={data}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport HomePage from './pages/HomePage/HomePage';\nimport LoginPage from './pages/LoginPage/LoginPage';\nimport SignupPage from './pages/SignupPgae/SignupPage';\nimport StudentsPage from './pages/StudentsPage/StudentsPage';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport NavBar from './components/NavBar/NavBar';\nimport { useState } from 'react';\nimport ActiveUserContext from './shared/ActiveUserContext';\nimport usersJSON from './data/users.json';\nimport coursesJSON from './data/courses.json';\nimport messageJSON from './data/messages.json'\nimport UserModel from './model/UserModel/UserModel';\nimport CourseModel from './model/CourseModel/CourseModel';\nimport SendMsgPage from './pages/SendMsgPage/SendMsgPage';\nimport UpdateGrades from './pages/UpdateGrades/UpdateGrades';\nimport MessageModel from './model/MessageModel/MessageModel';\nimport GetMessagesPage from './pages/GetMessagesPage/GetMessagesPage';\n\nfunction App() {\n    const [users, setUsers] = useState(usersJSON.map( plainuser => new UserModel(plainuser)));\n    const [activeUser, setActiveUser] = useState(users[0]);\n    const [coursesList, setCoursesList] = useState(coursesJSON.map ( course => new CourseModel(course)));\n    \n    const topicsList = [{\"topicId\": 1,\"topicName\":\"ערעור\"},\n                        {\"topicId\": 2,\"topicName\":\"שאלה למורה\"},\n                        {\"topicId\": 3,\"topicName\":\"בקשה\"}\n                        ]\n    const [messages,setMessages] = useState(messageJSON.map( plainMsg => new MessageModel(plainMsg)));\n\n    function addMessage(topicId, desc) {\n        const newMsg = new MessageModel({\n        //   id: messages[messages.length - 1] + 1,\n          topicId,\n          desc,          \n          userId: activeUser.id,\n          isNew : true\n        });\n        \n        setMessages(messages.concat(newMsg));\n        console.log(newMsg)        \n      }\n    \n    function addUser(id,email, fname, lname,pwd){\n        const newUser = new UserModel({\n            id,\n            fname,\n            lname,\n            email,\n            pwd,\n            role:\"student\",\n            courses:[{\n                \"courseId\": 1,\n                \"courseGrade\" : \"\"\n                }]\n        });\n        setUsers(users.concat(newUser));\n    }\n\n    function addCourses(courses,selectedUserIndex){\n        const newCourses = new CourseModel({\n            // courseId,\n            // courseName,\n            // courseGrade\n            // // courses:[{\n            //     \"courseId\": 1,\n            //     \"courseGrade\" : \"\"\n            //     }]\n            courseId:courses.courseId,\n            courseName:courses.courseName,\n            courseGrade:courses.courseGrade\n        });\n\n        console.log(users)\n        // console.log(parseInt(selectedUserIndex)+1)\n        // console.log(users[parseInt(selectedUserIndex)+1])\n        \n        // setUsers(users[selectedUserIndex+1].courses.concat(newCourses));\n        let index = parseInt(selectedUserIndex) ;\n        if(users[index+1].courses) {\n            users[index+1].courses.concat(newCourses);\n        } else{\n            users[index+1].courses = newCourses;\n        }        \n        console.log(users)\n    }\n\n  return (\n    <ActiveUserContext.Provider value={activeUser}>\n    <HashRouter>\n        <Switch>\n            <Route exact path=\"/\">\n                <NavBar onLogout={() => setActiveUser(null)}/>\n                <HomePage/>\n            </Route>\n            <Route exact path=\"/login\"><LoginPage users={users} onLogin={user =>setActiveUser(user)} /></Route>\n            <Route exact path=\"/signup\">\n                <NavBar onLogout={() => setActiveUser(null)}/>\n                <SignupPage addUser={addUser} users={users} onLogin={user =>setActiveUser(user)}/>\n            </Route>\n            <Route exact path=\"/students\">\n                <NavBar onLogout={() => setActiveUser(null)}/>\n                <StudentsPage coursesList={coursesList} />\n            </Route>\n            <Route exact path=\"/sendMsg\">\n                <NavBar onLogout={() => setActiveUser(null)}/>\n                <SendMsgPage messages={messages} users={users}\n                        addMessage={addMessage} topicsList={topicsList}/>\n            </Route>\n            <Route exact path=\"/updateGrades\">\n                <NavBar onLogout={() => setActiveUser(null)}/>\n                <UpdateGrades coursesList={coursesList} users={users} addCourses={addCourses}/>\n            </Route>\n            <Route exact path=\"/getMessages\">\n                <NavBar onLogout={() => setActiveUser(null)} messages={messages}/>\n                <GetMessagesPage users={users} messages={messages} topicsList={topicsList}/>\n            </Route>\n        </Switch>\n        </HashRouter>\n       </ActiveUserContext.Provider> \n\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}